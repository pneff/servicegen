<%
import re
# Get requests by path
my_requests = {}
for req in requests:
    method = req['method']
    path = req['path']
    
    # Normalize path to a regexp
    path = re.sub('{[^}]+}', '([^/]+)', path)
    my_requests.setdefault(path, []).append((method, req['name']))

%>#!/usr/bin/env python
# CAREFUL:
# This code was generated by the `servicegen' framework.
# Do not edit this file directly.

import web
from setup import SERVICENAME, logger
import servicegen.input
% for request in my_requests.values():
from ${servicename}.${request[0][1]} import ${request[0][1]}
% endfor

# Configure database
% for key, value in config.iteritems():
%   if value['type'] == 'database':
web.config.db_parameters = servicegen.input.get_config('${key}', '${value['type']}')
%   endif
% endfor


urls = (
    % for path, request in my_requests.iteritems():
    # With extension
    '${path}\.[a-z]{3,4}$',  '${request[0][1]}',
    # Without extension
    '${path}',               '${request[0][1]}',
    % endfor
)

if __name__ == "__main__":
    logger.info("Service %s started." % SERVICENAME)
    web.webapi.internalerror = web.debugerror
    web.run(urls, globals(), web.reloader)
