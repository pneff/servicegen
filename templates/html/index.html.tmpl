<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
    <%def name="codize(str)">
        <%
        import re, mako.filters
        def replacement_fun(match):
            """Returns the code block, dedentend as far as possible."""
            code = match.group(1)
            # Determine indentation
            indentation = 0
            lines = code.splitlines()
            firstline = lines[0]
            for line in lines:
                if line != "":
                    firstline = line
                    break
            while indentation < len(firstline) and firstline[indentation] == ' ':
                indentation += 1
            code = "\n".join([line[indentation:] for line in code.splitlines()])
            return '<code><pre>' + code + '</pre></code>'
        
        str = mako.filters.html_escape(str)
        reg = re.compile('\\\\code(.*)\\\\endcode', re.DOTALL)
        str = reg.sub(replacement_fun, str)
        %>
        ${str}
    </%def>
    
    <%def name="docTable(docs)">
        % if docs.has_key('doc'):
            <p>${codize(docs['doc'])}</p>
            <% del docs['doc'] %>
        % endif
        % if docs.has_key('params') and len(docs['params']) > 0:
            <h4>Parameters</h4>
            <dl class="params">
            % for key, value in docs['params'].iteritems():
                <dt>${key | h}</dt>
                <dd>${value | h}</dd>
            % endfor
            </dl>
        % endif
        <% del docs['params'] %>
        % if len(docs) > 0:
            <dl class="info">
            % for key, value in docs.iteritems():
                <dt>${key.capitalize() | h}</dt>
                <dd>${value | h}</dd>
            % endfor
            </dl>
        % endif
    </%def>
    
    <%def name="makeRequestId(req)"><%
        import re
        str = 'req' + req['method'] + '_' + req['path']
        return re.sub('[^a-zA-Z0-9_]', '_', str)
        %>
    </%def>
    
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <title>Service ${servicename | h}</title>
        <link rel="stylesheet" type="text/css" href="fonts-min.css">
        <link rel="stylesheet" type="text/css" href="default.css">
    </head>
    <body>
        <h1>${servicename | h}</h1>
        ${docTable(service['docs'])}
        <hr />
        
        %if len(config) > 0:
            <h2>Configuration</h2>
            <p>These variables can be changed using the external config file.</p>
            % for key, value in config.items():
                <h3><em class="type">${value['type'] | h}</em> ${key | h}</h3>
                ${docTable(value['docs'])}
            % endfor
            <hr />
        %endif
        
        <h2>Requests</h2>
        <h3>Summary</h3>
        <table class="requests">
            % for req in requests:
                <tr>
                    <td class="method">${req['method'] | h}</td>
                    <td>
                        <a href="#${makeRequestId(req)}">
                            ${req['path'] | h}
                        </a>
                        <br />
                        ${req['docs'].has_key('doc') and req['docs']['doc'] or ''}
                    </td>
                </tr>
            % endfor
        </table>
        <hr />
        
        % for req in requests:
            <h3 id="${makeRequestId(req)}">
                <em class="method">${req['method'] | h}</em>
                ${req['path'] | h}
            </h3>
            <%
            import copy
            # Copy documentation for POST params to separate dictionary
            postparams_doc = copy.copy(req['docs']['params'])
            for var in req['postparams']:
                if var in req['docs']['params']:
                    del req['docs']['params'][var]
            %>
            
            ${docTable(req['docs'])}
            
            %if len(req['postparams']) > 0:
                <h4>
                    %if req['method'] in ('GET', 'HEAD'):
                        Query string
                    %else:
                        POST
                    %endif
                    parameters
                </h4>
                <dl class="params">
                    %for var in req['postparams']:
                        <dt>${var | h}</dt>
                        <dd>
                            %if var in postparams_doc:
                                ${postparams_doc[var] | h}
                            %endif
                        </dd>
                    %endfor
                </dl>
            %endif
            
            <h4>Output</h4>
            <p>Supports the following output formats:</p>
            <ul class="output">
                %if len(req['output']) > 0:
                    %for out_type, out in req['output'].iteritems():
                        <li>
                            ${out_type | h}
                            ${docTable(out['docs'])}
                        </li>
                    %endfor
                %else:
                    <li>xml</li>
                %endif
            </ul>
            <hr />
        % endfor
    </body>
</html>
